version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: todo_postgres
    environment:
      POSTGRES_DB: todo_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - todo_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Todo Backend API
  todo_api:
    build: .
    container_name: todo_api
    environment:
      PORT: 8080
      APP_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password123
      DB_NAME: todo_db
      DB_SSL_MODE: disable
      DB_TIMEZONE: UTC
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - todo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Adminer for database management
  adminer:
    image: adminer:latest
    container_name: todo_adminer
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    networks:
      - todo_network
    environment:
      ADMINER_DEFAULT_SERVER: postgres

volumes:
  postgres_data:

networks:
  todo_network:
    driver: bridge